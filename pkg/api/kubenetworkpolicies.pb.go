//
//Copyright 2025 The Kubernetes Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: pkg/api/kubenetworkpolicies.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a Kubernetes Namespace
type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_pkg_api_kubenetworkpolicies_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Represents a Kubernetes Node
type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_api_kubenetworkpolicies_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// ContainerPort mimics the Kubernetes ContainerPort type.
type ContainerPort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerPort) Reset() {
	*x = ContainerPort{}
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerPort) ProtoMessage() {}

func (x *ContainerPort) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerPort.ProtoReflect.Descriptor instead.
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return file_pkg_api_kubenetworkpolicies_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ContainerPort) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// PodInfo contains the necessary information to match on network policies
type PodInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Pod
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The labels of the Pod
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The ports of the Containers on the Pod
	ContainerPorts []*ContainerPort `protobuf:"bytes,3,rep,name=container_ports,json=containerPorts,proto3" json:"container_ports,omitempty"`
	Namespace      *Namespace       `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Node           *Node            `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	LastUpdated    int64            `protobuf:"varint,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	ClusterId      string           `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PodInfo) Reset() {
	*x = PodInfo{}
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfo) ProtoMessage() {}

func (x *PodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_kubenetworkpolicies_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfo.ProtoReflect.Descriptor instead.
func (*PodInfo) Descriptor() ([]byte, []int) {
	return file_pkg_api_kubenetworkpolicies_proto_rawDescGZIP(), []int{3}
}

func (x *PodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PodInfo) GetContainerPorts() []*ContainerPort {
	if x != nil {
		return x.ContainerPorts
	}
	return nil
}

func (x *PodInfo) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *PodInfo) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *PodInfo) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *PodInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

var File_pkg_api_kubenetworkpolicies_proto protoreflect.FileDescriptor

const file_pkg_api_kubenetworkpolicies_proto_rawDesc = "" +
	"\n" +
	"!pkg/api/kubenetworkpolicies.proto\x12\x1fsigs.k8s.io.kubenetworkpolicies\"\xaa\x01\n" +
	"\tNamespace\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12N\n" +
	"\x06labels\x18\x02 \x03(\v26.sigs.k8s.io.kubenetworkpolicies.Namespace.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x01\n" +
	"\x04Node\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12I\n" +
	"\x06labels\x18\x02 \x03(\v21.sigs.k8s.io.kubenetworkpolicies.Node.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\rContainerPort\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"\xc6\x03\n" +
	"\aPodInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12L\n" +
	"\x06labels\x18\x02 \x03(\v24.sigs.k8s.io.kubenetworkpolicies.PodInfo.LabelsEntryR\x06labels\x12W\n" +
	"\x0fcontainer_ports\x18\x03 \x03(\v2..sigs.k8s.io.kubenetworkpolicies.ContainerPortR\x0econtainerPorts\x12H\n" +
	"\tnamespace\x18\x04 \x01(\v2*.sigs.k8s.io.kubenetworkpolicies.NamespaceR\tnamespace\x129\n" +
	"\x04node\x18\x05 \x01(\v2%.sigs.k8s.io.kubenetworkpolicies.NodeR\x04node\x12!\n" +
	"\flast_updated\x18\x06 \x01(\x03R\vlastUpdated\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\a \x01(\tR\tclusterId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B+Z)sigs.k8s.io/kube-network-policies/pkg/apib\x06proto3"

var (
	file_pkg_api_kubenetworkpolicies_proto_rawDescOnce sync.Once
	file_pkg_api_kubenetworkpolicies_proto_rawDescData []byte
)

func file_pkg_api_kubenetworkpolicies_proto_rawDescGZIP() []byte {
	file_pkg_api_kubenetworkpolicies_proto_rawDescOnce.Do(func() {
		file_pkg_api_kubenetworkpolicies_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_api_kubenetworkpolicies_proto_rawDesc), len(file_pkg_api_kubenetworkpolicies_proto_rawDesc)))
	})
	return file_pkg_api_kubenetworkpolicies_proto_rawDescData
}

var file_pkg_api_kubenetworkpolicies_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_api_kubenetworkpolicies_proto_goTypes = []any{
	(*Namespace)(nil),     // 0: sigs.k8s.io.kubenetworkpolicies.Namespace
	(*Node)(nil),          // 1: sigs.k8s.io.kubenetworkpolicies.Node
	(*ContainerPort)(nil), // 2: sigs.k8s.io.kubenetworkpolicies.ContainerPort
	(*PodInfo)(nil),       // 3: sigs.k8s.io.kubenetworkpolicies.PodInfo
	nil,                   // 4: sigs.k8s.io.kubenetworkpolicies.Namespace.LabelsEntry
	nil,                   // 5: sigs.k8s.io.kubenetworkpolicies.Node.LabelsEntry
	nil,                   // 6: sigs.k8s.io.kubenetworkpolicies.PodInfo.LabelsEntry
}
var file_pkg_api_kubenetworkpolicies_proto_depIdxs = []int32{
	4, // 0: sigs.k8s.io.kubenetworkpolicies.Namespace.labels:type_name -> sigs.k8s.io.kubenetworkpolicies.Namespace.LabelsEntry
	5, // 1: sigs.k8s.io.kubenetworkpolicies.Node.labels:type_name -> sigs.k8s.io.kubenetworkpolicies.Node.LabelsEntry
	6, // 2: sigs.k8s.io.kubenetworkpolicies.PodInfo.labels:type_name -> sigs.k8s.io.kubenetworkpolicies.PodInfo.LabelsEntry
	2, // 3: sigs.k8s.io.kubenetworkpolicies.PodInfo.container_ports:type_name -> sigs.k8s.io.kubenetworkpolicies.ContainerPort
	0, // 4: sigs.k8s.io.kubenetworkpolicies.PodInfo.namespace:type_name -> sigs.k8s.io.kubenetworkpolicies.Namespace
	1, // 5: sigs.k8s.io.kubenetworkpolicies.PodInfo.node:type_name -> sigs.k8s.io.kubenetworkpolicies.Node
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_api_kubenetworkpolicies_proto_init() }
func file_pkg_api_kubenetworkpolicies_proto_init() {
	if File_pkg_api_kubenetworkpolicies_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_api_kubenetworkpolicies_proto_rawDesc), len(file_pkg_api_kubenetworkpolicies_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_api_kubenetworkpolicies_proto_goTypes,
		DependencyIndexes: file_pkg_api_kubenetworkpolicies_proto_depIdxs,
		MessageInfos:      file_pkg_api_kubenetworkpolicies_proto_msgTypes,
	}.Build()
	File_pkg_api_kubenetworkpolicies_proto = out.File
	file_pkg_api_kubenetworkpolicies_proto_goTypes = nil
	file_pkg_api_kubenetworkpolicies_proto_depIdxs = nil
}
